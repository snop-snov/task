.page-header
  %h1=t '.title'

.well
  %h5=t '.order_state_filter'
  .btn-group
    - Order.aasm.states.map(&:name).each do |state|
      = link_to t(state), orders_path(q: { state_eq: state }), class: 'button btn btn-default'
    = link_to t('.all'), orders_path, class: 'button btn btn-default'

= paginate @orders, theme: 'twitter-bootstrap-3'

%table.table.table-striped
  %thead
    %tr
      %th= sort_link(@q, :id)
      %th= sort_link(@q, :delivery_date)
      %th= sort_link(@q, :delivery_shift)
      %th= sort_link(@q, :client_name)
      %th= sort_link(@q, :destination_raw_line_1)
      %th= sort_link(@q, :destination_city)
      %th= sort_link(@q, :destination_zip)
      %th= sort_link(@q, :phone_number)
      %th= sort_link(@q, :purchase_order_number)
      %th= sort_link(@q, :volume)
      %th= sort_link(@q, :handling_unit_quantity)
      %th= sort_link(@q, :state)
      %th=t 'helpers.actions'
  %tbody
    - @orders.each do |order|
      %tr
        %td= order.id
        %td=l order.delivery_date, format: :date_only if order.delivery_date.present?
        %td=t order.delivery_shift if order.delivery_shift.present?
        %td= order.client_name
        %td= order.destination_raw_line_1
        %td= order.destination_city
        %td= order.destination_zip
        %td= order.phone_number
        %td= order.purchase_order_number
        %td= order.volume
        %td= order.handling_unit_quantity
        %td= order.state
        %td
          = link_to edit_order_path(order.id) do
            %i.glyphicon.glyphicon-pencil
          - if order.need_checking?
            = link_to order_path(order, order: { state: :unassigned }), method: :put do
              %i.glyphicon.glyphicon-ok
          - else
            = link_to order_path(order, order: { state: :need_checking }), method: :put do
              %i.glyphicon.glyphicon-remove

= paginate @orders, theme: 'twitter-bootstrap-3'
